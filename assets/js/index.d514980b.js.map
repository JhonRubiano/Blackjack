{"version":3,"file":"index.d514980b.js","sources":["../../../vite/modulepreload-polyfill","../../../src/ts/models/elements.models.ts","../../../src/ts/models/game.models.ts","../../../src/ts/helpers/cardValue.ts","../../../src/ts/helpers/score.ts","../../../src/ts/helpers/shuffleCards.ts","../../../src/ts/helpers/winner.ts","../../../src/ts/components/createDeck.ts","../../../src/ts/components/drawCard.ts","../../../src/ts/components/renderCard.ts","../../../src/ts/components/initializeGame.ts","../../../src/ts/components/dealerTurn.ts","../../../src/main.ts"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","import { GameButtons, Players } from \"./interfaces.models\";\r\n\r\nexport const gameButtons: GameButtons = {\r\n    hitBtn: document.querySelector('#hitBtn'),\r\n    standBtn: document.querySelector('#standBtn'),\r\n    newGameBtn: document.querySelector('#newGameBtn')\r\n}\r\n\r\nexport const playerElements: Players = {\r\n    player:{\r\n        cardsContainer: document.querySelector('.player__cards'),\r\n        scoreContainer: document.querySelector('.player small')\r\n    },\r\n    dealer:{\r\n        cardsContainer: document.querySelector('.dealer__cards'),\r\n        scoreContainer: document.querySelector('.dealer small')\r\n    }\r\n}","import { GameVariables } from \"./interfaces.models\";\r\n\r\n/**\r\n * 2C = Two of Clubs\r\n * 2D = Two of Diamonds\r\n * 2H = Two of Hearts\r\n * 2S = Two of Spades\r\n */\r\nexport const gameVariables:GameVariables = {\r\n    deck:[],\r\n    playersPoints:{\r\n        player:0,\r\n        dealer:0\r\n    },\r\n    suits: [\r\n        'C', // Clubs\r\n        'D', // Diamonds\r\n        'H', // Hearts\r\n        'S'  // Spades\r\n        ],\r\n    values:['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K']\r\n}\r\n","import { gameVariables, player } from \"../models\";\r\n\r\nexport const cardValue = ({card,turn}:{card: string, turn: player}): number => {\r\n    const value: string = card.substring(0, card.length - 1);\r\n    switch (value) {\r\n        \r\n        case 'A': {\r\n            return (((gameVariables.playersPoints[turn] + 11) > 21) ? 1 : 11);\r\n        }\r\n\r\n        case 'J':\r\n        case 'Q':\r\n        case 'K':\r\n            return 10;\r\n\r\n        default:\r\n            return parseInt(value);\r\n\r\n    }\r\n}","import { cardValue } from \".\";\r\nimport { player, playerElements, gameVariables } from \"../models\";\r\n\r\nexport const getScore = ({card,turn}: { card: string, turn: player } ) =>{\r\n    gameVariables.playersPoints[turn] += cardValue({card, turn});\r\n    playerElements[turn].scoreContainer!.innerHTML = `${gameVariables.playersPoints[turn]}`;\r\n    return gameVariables.playersPoints[turn];\r\n}","export const shuffleCards = (array: Array<any>) => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        const temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n    return array;\r\n}","import { gameVariables } from \"../models\"\r\n\r\nexport const winner = () =>{\r\n    const {player:minimumScore,dealer:dealerScore} = gameVariables.playersPoints;\r\n    setTimeout(() => {\r\n        if(dealerScore === minimumScore){\r\n            alert('Draw!')\r\n        } else if(minimumScore>21){\r\n            alert('Dealer wins!')\r\n        }else if(dealerScore>21){\r\n            alert('Player wins!')\r\n        }else{\r\n            alert('Dealer wins')\r\n        }\r\n        \r\n    }, 1000 );\r\n}","import { shuffleCards } from \"../helpers\";\r\nimport { gameVariables } from \"../models\";\r\n\r\nexport const createDeck = (): string[] => {\r\n    for (let suit of gameVariables.suits) {\r\n        for (let value of gameVariables.values) {\r\n            gameVariables.deck.push(value + suit);\r\n        }\r\n    }\r\n    return shuffleCards(gameVariables.deck);\r\n};","import { gameVariables } from \"../models\";\r\n\r\n/**\r\n *  draw a card \r\n * @returns string \r\n */\r\nexport const drawCard = ():string =>{\r\n  if ( gameVariables.deck.length === 0 ){\r\n    throw 'No hay cartas en el deck';\r\n  }\r\n  return gameVariables.deck.pop()!;\r\n}","import { player, playerElements } from \"../models\";\r\nimport { getScore } from \"../helpers\";\r\n\r\nexport const renderCard = ({card,turn}:{card: string, turn: player} ):number => {\r\n    const cardImg = document.createElement('img');\r\n    let  score =  getScore({card,turn})\r\n    cardImg.src = `./deck/${card}.png`;\r\n    cardImg.alt = card;\r\n    cardImg.title = card;\r\n    cardImg.setAttribute('width', '6rem');\r\n    cardImg.setAttribute('height', '146.7');\r\n    playerElements[turn].cardsContainer!.append(cardImg);\r\n    return score;\r\n}","import { gameButtons, gameVariables, playerElements } from \"../models\";\r\nimport { createDeck } from \"./createDeck\";\r\nimport { drawCard } from \"./drawCard\";\r\nimport { renderCard } from \"./renderCard\";\r\nexport const initializeGame = ( players: number = 2 ) => {\r\n    gameVariables.playersPoints.player = 0;\r\n    gameVariables.playersPoints.dealer = 0;\r\n    playerElements.player.cardsContainer!.innerHTML = '';\r\n    playerElements.dealer.cardsContainer!.innerHTML = '';\r\n    playerElements.player.scoreContainer!.innerHTML = '0';\r\n    playerElements.dealer.scoreContainer!.innerHTML = '0';\r\n\r\n    gameVariables.deck = createDeck();\r\n    //initialize with 0 points for all players\r\n\r\n    gameButtons.hitBtn!.disabled = false;\r\n    gameButtons.standBtn!.disabled = false;\r\n\r\n    for (let i = 0; i < players; i++) {\r\n        let initialCardPlayer = drawCard();\r\n        renderCard({\r\n            card: initialCardPlayer, \r\n            turn: 'player'\r\n        });\r\n    }\r\n}","import { winner } from \"../helpers\";\r\nimport { gameVariables } from \"../models\";\r\nimport { drawCard } from \"./drawCard\";\r\nimport { renderCard } from \"./renderCard\";\r\n\r\nexport const dealerTurn = (minimumScore:number) => {\r\n\r\n    do {\r\n        const card = drawCard();\r\n        gameVariables.playersPoints.dealer = renderCard({ card, turn: \"dealer\" });\r\n\r\n    } while ((gameVariables.playersPoints.dealer < minimumScore) && (minimumScore <= 21));\r\n\r\n    winner();\r\n}","import { drawCard, gameButtons, gameVariables, initializeGame, renderCard } from './ts';\r\nimport { dealerTurn } from './ts/components/dealerTurn';\r\n\r\ngameButtons.newGameBtn?.addEventListener('click', () => {\r\n  initializeGame();\r\n})\r\ngameButtons.hitBtn?.addEventListener('click', () => {\r\n  const card: string = drawCard();\r\n  renderCard({ card, turn: 'player' });\r\n  if(gameVariables.playersPoints.player > 21){\r\n    gameButtons.hitBtn!.disabled =true;\r\n    gameButtons.standBtn!.disabled = true;\r\n    dealerTurn(gameVariables.playersPoints.player);\r\n  }else if (gameVariables.playersPoints.player === 21){\r\n    gameButtons.hitBtn!.disabled = true;\r\n    gameButtons.standBtn!.disabled = true;\r\n    dealerTurn(gameVariables.playersPoints.player);\r\n  }\r\n});\r\ngameButtons.standBtn?.addEventListener('click', () => {\r\n  gameButtons.hitBtn!.disabled = true;\r\n  gameButtons.standBtn!.disabled = true;\r\n  dealerTurn(gameVariables.playersPoints.player);\r\n});\r\n"],"names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","gameButtons","playerElements","gameVariables","cardValue","card","turn","value","getScore","shuffleCards","array","i","j","temp","winner","minimumScore","dealerScore","createDeck","suit","drawCard","renderCard","cardImg","score","initializeGame","players","initialCardPlayer","dealerTurn","_a"],"mappings":"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"}